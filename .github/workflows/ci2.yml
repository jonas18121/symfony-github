name: Pipeline-CI-2
on:
  push:
    branches: [ main ]
jobs:
  ci2:
    runs-on: self-hosted
    strategy:
      matrix:
        operating-system: [ubuntu-22.04, ubuntu-20.04, ubuntu-18.04, ubuntu-latest] # execute les actions ci-dessous dans les 4 OS préciser ici
        php-versions: ['8.1'] # Précise la version PHP à utiliser, execute les actions ci-dessous avec les version de PHP préciser ici
    name: PHP ${{ matrix.php-versions }} Test on ${{ matrix.operating-system }}

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

            # https://github.com/shivammathur/setup-php (community)
      - name: Setup PHP, extensions and composer with shivammathur/setup-php
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }} # Précise la version PHP à utiliser
          extensions: mbstring, xml, ctype, iconv, intl, pdo, pdo_mysql, dom, filter, gd, json, pdo_sqlite

      # pdo_sqlite
      - name: pdo_sqlite
        run: sudo apt-get install php-sqlite3 -y

      # cache
      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            vendor
          key: ${{ runner.os }}-${{ hashFiles('composer.lock') }}

      # Install composer
      - name: "Composer install"
        run: composer install --no-interaction --no-progress

      #  Action 7 : PHP CS FIXER
      - name: PHP-CS-Fixer
        run: |
          composer require friendsofphp/php-cs-fixer
          ./vendor/bin/php-cs-fixer fix --dry-run

      #  Action 8 : PHP STAN
      - name: PHP Stan
        run: |
          ./vendor/bin/simple-phpunit install
          composer require phpstan/phpstan
          composer config --no-plugins allow-plugins.phpstan/extension-installer true
          composer require phpstan/extension-installer
          composer require phpstan/phpstan-symfony
          ./vendor/bin/phpstan analyse src --memory-limit 1G
